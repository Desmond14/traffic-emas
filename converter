#!/usr/bin/env escript

-define(PROGRAM, "converter").


main(Args) ->
    add_deps(),
    Options = get_options(Args),
    ProblemSize = get_problem_size(Options),
    util:convert_to_jsons(ProblemSize).


add_deps() ->
    ScriptPath = filename:dirname(escript:script_name()),
    code:add_patha(ScriptPath ++  "/ebin"),
    code:add_pathsa(filelib:wildcard(ScriptPath ++ "/deps/*/ebin")).

get_options(Args) ->
    Specs = options_spec(),
    Options =
        case getopt:parse(Specs, Args) of
            {ok, {Parsed, [] = _Others} } ->
                Parsed;

            {ok, {_Parsed, Others}} ->
                usage(),
                erlang:exit("Not supported options", Others);

            {error, Data} ->
                usage(),
                erlang:exit("Error parsing args", Data)
        end,
    Options.

get_problem_size(Options) ->
    case proplists:get_value(problem_size, Options) of
        undefined ->
            usage(),
            erlang:exit("Missing time argument");
        ProblemSize ->
            ProblemSize
    end.


options_spec() ->
    Specs = emas_config:options_specs().

usage() ->
    getopt:usage(options_spec(), ?PROGRAM).

